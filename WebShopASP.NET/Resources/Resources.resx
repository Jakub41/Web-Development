<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllProducts" xml:space="preserve">
    <value>All Products</value>
  </data>
  <data name="categories" xml:space="preserve">
    <value>CATEGORIES</value>
  </data>
  <data name="Contactus" xml:space="preserve">
    <value>Contact us</value>
  </data>
  <data name="CreateanAccount" xml:space="preserve">
    <value>Create an Account</value>
  </data>
  <data name="CreatingAnAccount" xml:space="preserve">
    <value>By creating an account with our store, you will be able to move through the checkout process faster, store multiple shipping addresses, view and track your orders in yBy creating an account with our store, you will be able to move through the checkout process faster, store multiple shipping addresses, view and track your orders in your account and more</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="EmailInvalid" xml:space="preserve">
    <value>Email is not valid</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Email is required</value>
  </data>
  <data name="ForgotYourPassword" xml:space="preserve">
    <value>Forgot Your Password?</value>
  </data>
  <data name="Free" xml:space="preserve">
    <value>Free</value>
  </data>
  <data name="live247" xml:space="preserve">
    <value>24x7 live</value>
  </data>
  <data name="login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Logoff" xml:space="preserve">
    <value>Log off</value>
  </data>
  <data name="NEWCUSTOMERS" xml:space="preserve">
    <value>NEW CUSTOMERS</value>
  </data>
  <data name="over500" xml:space="preserve">
    <value>on order over 500</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PleaseLogin" xml:space="preserve">
    <value>If you have an account with us, please log in.</value>
  </data>
  <data name="REGISTEREDCUSTOMERS" xml:space="preserve">
    <value>REGISTERED CUSTOMERS</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Shipping" xml:space="preserve">
    <value>Shipping</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>JK Eletronics</value>
  </data>
  <data name="VIEWALLPRODUCTS" xml:space="preserve">
    <value>VIEW ALL PRODUCTS</value>
  </data>
  <data name="YOURACCOUNT" xml:space="preserve">
    <value>YOUR ACCOUNT</value>
  </data>
  <data name="ADDTOCART" xml:space="preserve">
    <value>ADD TO CART</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="CheckOut" xml:space="preserve">
    <value>Check Out</value>
  </data>
  <data name="DevelopedBy" xml:space="preserve">
    <value>Developed By</value>
  </data>
  <data name="Empty" xml:space="preserve">
    <value>Empty</value>
  </data>
  <data name="EnterEmail" xml:space="preserve">
    <value>Enter Email</value>
  </data>
  <data name="FLAT0FF" xml:space="preserve">
    <value>FLAT  50% OFF</value>
  </data>
  <data name="FollowUS" xml:space="preserve">
    <value>Follow US</value>
  </data>
  <data name="FORALLPURCHASE" xml:space="preserve">
    <value>FOR ALL PURCHASE</value>
  </data>
  <data name="GETNOW" xml:space="preserve">
    <value>GET NOW</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="LatestProducts" xml:space="preserve">
    <value>Latest Products</value>
  </data>
  <data name="NewsLetter" xml:space="preserve">
    <value>News Letter</value>
  </data>
  <data name="OurAddress" xml:space="preserve">
    <value>Our Address</value>
  </data>
  <data name="SignUp" xml:space="preserve">
    <value>Sign Up</value>
  </data>
  <data name="Subscribe" xml:space="preserve">
    <value>Subscribe</value>
  </data>
  <data name="TOPBRANDS" xml:space="preserve">
    <value>TOP BRANDS</value>
  </data>
  <data name="TopProducts" xml:space="preserve">
    <value>Top Products</value>
  </data>
  <data name="VALUE" xml:space="preserve">
    <value>VALUE</value>
  </data>
  <data name="ViewCart" xml:space="preserve">
    <value>View Cart</value>
  </data>
  <data name="AddCard" xml:space="preserve">
    <value>Add Card</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AddressRequired" xml:space="preserve">
    <value>The Address is required</value>
  </data>
  <data name="BillingInformation" xml:space="preserve">
    <value>Billing Information</value>
  </data>
  <data name="CardNumber" xml:space="preserve">
    <value>CARD NUMBER</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="CityRequired" xml:space="preserve">
    <value>The City is required</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="CountryRequired" xml:space="preserve">
    <value>The Country is required</value>
  </data>
  <data name="CreditCardRequired" xml:space="preserve">
    <value>Credit Card Required</value>
  </data>
  <data name="creditCards" xml:space="preserve">
    <value>Credit Cards</value>
  </data>
  <data name="CreditCartInvalid" xml:space="preserve">
    <value>The credit card number is not valid</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="EditDetails" xml:space="preserve">
    <value>Edit Details</value>
  </data>
  <data name="emptyCart" xml:space="preserve">
    <value>Cart is empty</value>
  </data>
  <data name="EXPIRATION" xml:space="preserve">
    <value>EXPIRATION</value>
  </data>
  <data name="EXPIRATIONDATE" xml:space="preserve">
    <value>EXPIRATION DATE</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="FillAllDetails" xml:space="preserve">
    <value>Please Fill All Field And Click Update</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="FirstNameRequired" xml:space="preserve">
    <value>The First Name is required</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="GrandTotal" xml:space="preserve">
    <value>GrandTotal</value>
  </data>
  <data name="hightolow" xml:space="preserve">
    <value>Price: High Low</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="itemsinstock" xml:space="preserve">
    <value>Items In Stock</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="LastNameRequired" xml:space="preserve">
    <value>The Last Name is required</value>
  </data>
  <data name="Latest" xml:space="preserve">
    <value>Latest</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="NotNumericValue" xml:space="preserve">
    <value>The value is not numeric</value>
  </data>
  <data name="PaymentDetails" xml:space="preserve">
    <value>Payment Details</value>
  </data>
  <data name="PaymentInformation" xml:space="preserve">
    <value>Payment Information</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="PhoneNumberRequired" xml:space="preserve">
    <value>The Phone is required</value>
  </data>
  <data name="PhoneNumberValidated" xml:space="preserve">
    <value>The value is not valid %s phone number</value>
  </data>
  <data name="please" xml:space="preserve">
    <value>Please</value>
  </data>
  <data name="Post" xml:space="preserve">
    <value>Post</value>
  </data>
  <data name="PostalCode" xml:space="preserve">
    <value>PostalCode</value>
  </data>
  <data name="PostalCodeRequired" xml:space="preserve">
    <value>The Postal Code is required</value>
  </data>
  <data name="PostalCodeValidated" xml:space="preserve">
    <value>The value is not valid %s postal code</value>
  </data>
  <data name="PostBy" xml:space="preserve">
    <value>Post By</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="ProductDetails" xml:space="preserve">
    <value>Product Details</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="ProductsOrdered" xml:space="preserve">
    <value>Products Ordered</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="QuickView" xml:space="preserve">
    <value>Quick View</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SecurityNumberRequired" xml:space="preserve">
    <value>The Security Number is required</value>
  </data>
  <data name="ShareProduct" xml:space="preserve">
    <value>Share Product</value>
  </data>
  <data name="Sort" xml:space="preserve">
    <value>Sort</value>
  </data>
  <data name="StartoProduct" xml:space="preserve">
    <value>Star to this Product</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="StateRequired" xml:space="preserve">
    <value>The State is required</value>
  </data>
  <data name="submittingagain" xml:space="preserve">
    <value>and try submitting again</value>
  </data>
  <data name="subtotal" xml:space="preserve">
    <value>SubTotal</value>
  </data>
  <data name="Tax" xml:space="preserve">
    <value>Tax</value>
  </data>
  <data name="thankyouforrate" xml:space="preserve">
    <value>Thanks For Your Ratings</value>
  </data>
  <data name="torate" xml:space="preserve">
    <value>to rate</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TotalReviews" xml:space="preserve">
    <value>Total Reviews</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UpdateCustomerInfo" xml:space="preserve">
    <value>Please Update Customer and Payment form before submitting for checkout</value>
  </data>
  <data name="USERINFO" xml:space="preserve">
    <value>user info</value>
  </data>
  <data name="ValidCardNo" xml:space="preserve">
    <value>Valid Card Number</value>
  </data>
  <data name="ValidCardNumber" xml:space="preserve">
    <value>Valid Card Number</value>
  </data>
  <data name="YouhaveRated" xml:space="preserve">
    <value>You have Rated</value>
  </data>
</root>